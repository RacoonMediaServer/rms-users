// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Users API for Racoon Media Server Project",
    "title": "RMS Users API",
    "version": "1.1.0"
  },
  "host": "136.244.108.126",
  "paths": {
    "/signup": {
      "get": {
        "tags": [
          "registration"
        ],
        "summary": "Саморегистрация",
        "operationId": "signUp",
        "parameters": [
          {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Домен",
            "name": "domain",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "token"
              ],
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Access Denied"
          },
          "500": {
            "description": "Ошибка на стороне сервера"
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "key": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Получить список пользователей и информацию по ним",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "results"
              ],
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/user"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка на стороне сервера"
          }
        }
      },
      "post": {
        "security": [
          {
            "key": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Создать новый ключ пользователя",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "token"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка на стороне сервера"
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "security": [
          {
            "key": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Удалить ключ пользователя",
        "operationId": "deleteUser",
        "parameters": [
          {
            "type": "string",
            "description": "Ключ пользователя",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Ключ не найден"
          },
          "500": {
            "description": "Ошибка на стороне сервера"
          }
        }
      }
    }
  },
  "definitions": {
    "principal": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "default": "user",
          "enum": [
            "admin",
            "user",
            "listener"
          ]
        },
        "telegramUser": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Администрирование пользователей",
      "name": "users"
    },
    {
      "description": "Саморегистрация новых пользователей",
      "name": "registration"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Users API for Racoon Media Server Project",
    "title": "RMS Users API",
    "version": "1.1.0"
  },
  "host": "136.244.108.126",
  "paths": {
    "/signup": {
      "get": {
        "tags": [
          "registration"
        ],
        "summary": "Саморегистрация",
        "operationId": "signUp",
        "parameters": [
          {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Домен",
            "name": "domain",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "token"
              ],
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Access Denied"
          },
          "500": {
            "description": "Ошибка на стороне сервера"
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "key": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Получить список пользователей и информацию по ним",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "results"
              ],
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/user"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка на стороне сервера"
          }
        }
      },
      "post": {
        "security": [
          {
            "key": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Создать новый ключ пользователя",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "token"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка на стороне сервера"
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "security": [
          {
            "key": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Удалить ключ пользователя",
        "operationId": "deleteUser",
        "parameters": [
          {
            "type": "string",
            "description": "Ключ пользователя",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Ключ не найден"
          },
          "500": {
            "description": "Ошибка на стороне сервера"
          }
        }
      }
    }
  },
  "definitions": {
    "principal": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "default": "user",
          "enum": [
            "admin",
            "user",
            "listener"
          ]
        },
        "telegramUser": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Администрирование пользователей",
      "name": "users"
    },
    {
      "description": "Саморегистрация новых пользователей",
      "name": "registration"
    }
  ]
}`))
}
